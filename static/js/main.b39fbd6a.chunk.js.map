{"version":3,"sources":["Homescreen/keys.js","Homescreen/Send.jsx","Homescreen/Receive.jsx","Homescreen/Homescreen.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["keys","publish","subscribe","Send","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","react_default","a","createElement","react_onsenui","onClick","showCoords","onSend","Component","Receive","orientation","messages","map","m","index","key","message","content","biggerLat","Homescreen","state","messagesQ1","messagesQ2","messagesQ3","messagesQ4","messagesToDisplay","pubnub","PubNubReact","publishKey","subscribeKey","init","assertThisInitialized","window","addEventListener","event","console","log","setState","alpha","bind","_this2","channels","withPresence","getMessage","msg","push","isGeolocationAvailable","isGeolocationEnabled","coords","lat","latitude","long","longitude","biggerLong","unsubscribe","z","channel","alert","_this3","onPreChange","_ref","onPostChange","onReactive","position","renderTabs","activeIndex","tabbar","Send_Send","send","tab","label","icon","Receive_Receive","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","App","src_Homescreen_Homescreen","Boolean","location","hostname","match","ReactDOM","render","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b39fbd6a.chunk.js","sourcesContent":["var keys = {\r\n\tpublish:'pub-c-5f7cd7fc-4b91-4c69-a77e-42f3f5078a66',\r\n\tsubscribe:'sub-c-9e229f4a-6802-11e9-81d5-56c3556875f9'\r\n}\r\nexport default keys;","import React, { Component } from 'react';\r\nimport PubNubReact from 'pubnub-react';\r\nimport keys from \"./keys\";\r\n \r\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\r\nimport * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\r\n// Webpack CSS import\r\nimport \"onsenui/css/onsenui.css\";\r\nimport \"onsenui/css/onsen-css-components.css\";\r\n\r\nexport default class Send extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            \r\n          <Ons.Page>\r\n    <button onClick = {() => this.props.showCoords()}>visa koordinater</button>\r\n            <button onClick = {() => this.props.onSend(\"hej\")}>skick hej</button>\r\n        </Ons.Page>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PubNubReact from 'pubnub-react';\r\nimport keys from \"./keys\";\r\n \r\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\r\nimport * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\r\n// Webpack CSS import\r\nimport \"onsenui/css/onsenui.css\";\r\nimport \"onsenui/css/onsen-css-components.css\";\r\n\r\nexport default class Receive extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n          <Ons.Page>\r\n            <p>{this.props.orientation}</p>\r\n            <ul>\r\n                {this.props.messages.map((m, index) => <li key={'message' + index}>{m.message.content + m.message.biggerLat}</li>)}\r\n            </ul>\r\n        </Ons.Page>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PubNubReact from 'pubnub-react';\r\nimport keys from \"./keys\";\r\n \r\nimport Send from \"./Send\";\r\nimport Receive from \"./Receive\";\r\n\r\nimport {geolocated} from 'react-geolocated';\r\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\r\nimport * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\r\n// Webpack CSS import\r\nimport \"onsenui/css/onsenui.css\";\r\nimport \"onsenui/css/onsen-css-components.css\";\r\n\r\nclass Homescreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          orientation: \"funkar inte om detta Ã¤r kvar\",\r\n          messages:[],\r\n          messagesQ1:[],\r\n          messagesQ2:[],\r\n          messagesQ3:[],\r\n          messagesQ4:[],\r\n          messagesToDisplay:[],\r\n        };\r\n        this.pubnub = new PubNubReact({\r\n            publishKey: keys.publish,\r\n            subscribeKey: keys.subscribe\r\n        });\r\n        this.pubnub.init(this);\r\n        window.addEventListener('deviceorientation', function(event) {\r\n          console.log(this);\r\n          this.setState({\r\n            orientation:event.alpha,\r\n          });\r\n        }.bind(this));\r\n    }\r\n \r\n    componentWillMount() {\r\n      console.log(keys);\r\n        this.pubnub.subscribe({\r\n            channels: ['channel1'],\r\n            withPresence: true\r\n        });\r\n \r\n        this.pubnub.getMessage('channel1', (msg) => {\r\n            console.log(msg);\r\n            this.state.messages.push(msg);\r\n            if(!this.props.isGeolocationAvailable || !this.props.isGeolocationEnabled){\r\n              console.log(\"Enable geolocation!\");\r\n              return\r\n            }\r\n            let coords = this.props.coords;\r\n            let lat = coords.latitude;\r\n            let long = coords.longitude;\r\n            if (lat === null || long === null) {\r\n              return\r\n            }\r\n            if (msg.message.biggerLat && msg.message.biggerLong) {\r\n              if (lat >= msg.message.coords.lat && long >= msg.message.coords.long) {\r\n                this.state.messagesToDisplay.push(msg);\r\n              }\r\n            }\r\n            else if (!msg.message.biggerLat && msg.message.biggerLong){\r\n              if (lat < msg.message.coords.lat && long >= msg.message.coords.long) {\r\n                this.state.messagesToDisplay.push(msg);\r\n              }\r\n            }\r\n            else if (!msg.message.biggerLat && !msg.message.biggerLong){\r\n              if (lat < msg.message.coords.lat && long < msg.message.coords.long) {\r\n                this.state.messagesToDisplay.push(msg);\r\n              }\r\n            }\r\n            else if (msg.message.biggerLat && !msg.message.biggerLong){\r\n              if (lat >= msg.message.coords.lat && long < msg.message.coords.long) {\r\n                this.state.messagesToDisplay.push(msg);\r\n              }\r\n            }\r\n            else{\r\n              console.log(\"unknown direction :/\");\r\n            }\r\n        });\r\n \r\n        // this.pubnub.getStatus((st) => {\r\n        //     this.pubnub.publish({\r\n        //         message: 'hello world from react',\r\n        //         channel: 'channel1'\r\n        //     });\r\n        // });\r\n    }\r\n \r\n    componentWillUnmount() {\r\n        this.pubnub.unsubscribe({\r\n            channels: ['channel1']\r\n        });\r\n    }\r\n\r\n \r\n    send(msg){\r\n        let z = this.state.orientation;\r\n        console.log(z);\r\n        let biggerLat, biggerLong;\r\n        \r\n        if (0<=z && z<=90){\r\n          biggerLat = true;\r\n          biggerLong = true;\r\n        }\r\n        else if ( 90<z && z<=180 ){\r\n          biggerLat = false;\r\n          biggerLong = true;\r\n        }\r\n        else if (180<z && z<=270){\r\n          biggerLat = false;\r\n          biggerLong = false;\r\n        }\r\n        else if ( 270<z && z <360){\r\n          biggerLat = true;\r\n          biggerLong = false;\r\n        }\r\n        else{\r\n          console.log(\"default i switch case: z Ã¤r \" + z);\r\n          biggerLat = null;\r\n          biggerLong = null;\r\n          \r\n        }\r\n        console.log(z);\r\n        console.log(biggerLong);\r\n        let coords;\r\n        if(!this.props.isGeolocationAvailable || !this.props.isGeolocationEnabled){\r\n          coords = {\r\n            lat:null,\r\n            long:null,\r\n          }\r\n          console.log(this.props.coords);\r\n        }\r\n        else{\r\n          coords = {\r\n            lat: this.props.coords.latitude,\r\n            long: this.props.coords.longitude,\r\n          }\r\n        }\r\n        this.pubnub.publish({\r\n          message: {\r\n            content:msg,\r\n            biggerLat:biggerLat,\r\n            biggerLong:biggerLong,\r\n            coords:coords,\r\n          },\r\n          channel: 'channel1',          \r\n        });\r\n        console.log(this.state.messages);\r\n    }\r\n\r\n    showCoords(){\r\n      alert(\"lat: \" + this.props.coords.latitude + \" long: \" + this.props.coords.longitude);\r\n    }\r\n\r\n    render() {\r\n        // const messages = this.pubnub.getMessage('channel1');\r\n\r\n        return (\r\n            \r\n          <Ons.Page>\r\n            <Ons.Tabbar\r\n              onPreChange={({ index }) => this.setState({ index: index })}\r\n              onPostChange={() => console.log(\"postChange\")}\r\n              onReactive={() => console.log(\"postChange\")}\r\n              position=\"bottom\"\r\n              index={this.state.index}\r\n              renderTabs={(activeIndex, tabbar) => [\r\n                {\r\n                  content: (\r\n                    <Ons.Page key=\"Feed\">\r\n                     <Send onSend = {(msg) => this.send(msg)} showCoords = {() => this.showCoords()}/>\r\n                    \r\n                    </Ons.Page>\r\n                  ),\r\n                  tab: <Ons.Tab label=\"Feed\" icon=\"fa-headphones\" key=\"FeedTab\" />\r\n                },\r\n                {\r\n                  content: (\r\n                    <Ons.Page key=\"Upload\">\r\n                      <Receive \r\n                        messages = { \r\n                          (!this.props.isGeolocationAvailable || !this.props.isGeolocationEnabled) ?\r\n                            this.state.messages : this.state.messagesToDisplay\r\n                        } \r\n                        orientation = {this.state.orientation} />\r\n                    </Ons.Page>\r\n                  ),\r\n                  tab: <Ons.Tab label=\"Upload\" icon=\"fa-microphone\" key=\"UploadTab\" />\r\n                }\r\n              ]}\r\n            />\r\n        </Ons.Page>\r\n        );\r\n    }\r\n}\r\n                \r\n// initializes the geolocated thing and sets Homescreen aas it's child\r\nexport default geolocated({\r\n  positionOptions: {\r\n    enableHighAccuracy: false,\r\n  },\r\n  userDecisionTimeout: 5000,\r\n})(Homescreen);","import React, { Component } from 'react';\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport Homescreen from \"./Homescreen/Homescreen\";\r\n// imports for OnsenUI\r\nimport * as Ons from 'react-onsenui'; // Import everything and use it as 'Ons.Page', 'Ons.Button'\r\nimport * as ons from 'onsenui'; // This needs to be imported to bootstrap the components.\r\n// Webpack CSS import\r\nimport 'onsenui/css/onsenui.css';\r\nimport 'onsenui/css/onsen-css-components.css';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Homescreen/>\r\n      </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(  \r\n\t<HashRouter>\r\n    \t<App />\r\n  \t</HashRouter>\r\n  , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}