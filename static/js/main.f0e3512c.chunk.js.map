{"version":3,"sources":["images/photo-shoulders-1.jpg","images/photo-feet.jpg","Yoga/Yoga.jsx","Meditation/Meditation.jsx","Breathing/Breathing.jsx","About/About.jsx","Homescreen/Homescreen.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","__webpack_require__","p","Yoga","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","log","ons","alert","react_default","a","createElement","map","item","i","key","react_onsenui","src","require","style","maxWidth","instructions","Component","Meditation","Breathing","About","Homescreen","_this","state","index","_this2","id","onPreChange","_ref","setState","onPostChange","onReactive","position","renderTabs","activeIndex","tabbar","content","src_About_About","tab","label","icon","src_Yoga_Yoga","className","src_Breathing_Breathing","src_Meditation_Meditation","App","src_Homescreen_Homescreen","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0e3512c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/photo-shoulders-1.ed7a2962.jpg\";","module.exports = __webpack_public_path__ + \"static/media/photo-feet.3e7011e0.jpg\";","import React, { Component } from 'react';\nimport Fullscreen from \"react-full-screen\";\nimport \"./Yoga.css\";\nimport { Link } from \"react-router-dom\";\n// imports for OnsenUI\nimport * as Ons from 'react-onsenui'; // Import everything and use it as 'Ons.Page', 'Ons.Button'\nimport * as ons from 'onsenui'; // This needs to be imported to bootstrap the components.\n// Webpack CSS import\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\n\n\nclass Yoga extends Component {\n  \n  constructor(props){\n    super(props);\n    // this.state = {\n    // }\n  }\n  \n  componentDidMount(){\n    // när den skapats\n  }\n\n  handleClick(){\n    console.log(ons);\n    ons.notification.alert('Hello world!');\n  }\n\n  instructions(){\n    let instructions = [\"Let your arms hang loose.\", \"Become aware of the shoulders.\", \"Slightly lift one shoulder and release it.\", \n     \"Let the shoulder come all the way down.\", \"Lift the other shoulder and release it.\", \"Alternate three more times on each side.\", \n     \"Experience the breath flowing in and out of the body.\"\n    ];        \n    \n    return (\n    <div> \n      <h1>Yoga Your Shoulders</h1>\n      <ol>\n        {instructions.map((item, i) =>\n          <li key = {i + item}>{item}</li>\n         )}\n      </ol>\n    </div>\n    )\n  }\n\n  render() {\n       \n    return (\n          <Ons.Page>\n            <Ons.Card>\n              <img src = {require(\"../images/photo-shoulders-1.jpg\")} style = {{maxWidth:\"100%\"}}/>\n              {this.instructions()}\n            </Ons.Card>\n          </Ons.Page>\n      );\n  }\n}\n\n// initializes the geolocated thing and sets Karta aas it's child\nexport default Yoga;\n","import React, { Component } from 'react';\n//import Fullscreen from \"react-full-screen\";\nimport { Link } from \"react-router-dom\";\n// imports for OnsenUI\nimport * as Ons from 'react-onsenui'; // Import everything and use it as 'Ons.Page', 'Ons.Button'\nimport * as ons from 'onsenui'; // This needs to be imported to bootstrap the components.\n// Webpack CSS import\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\n\n\nclass Meditation extends Component {\n  \n  constructor(props){\n    super(props);\n    // this.state = {\n    // }\n  }\n  \n  componentDidMount(){\n    // när den skapats\n  }\n\n  handleClick(){\n    console.log(ons);\n    ons.notification.alert('Hello world!');\n  }\n\n  instructions(){\n    let instructions = [\"Stand on your feet.\", \"Experience the contact with the ground.\", \"Feel into the soles of the feet.\", \n    \"Feel the knees.\", \"The hips.\", \"The spine.\", \"Shoulders.\", \"Neck.\", \"Head.\", \"Feel the connection between the top of the head and the feet.\"];        \n    \n    return (\n    <div> \n      <h1>Feel Your Feet</h1>\n      <ol>\n        {instructions.map((item, i) =>\n          <li key = {i + item}>{item}</li>\n         )}\n      </ol>\n    </div>\n    )\n  }\n\n  render() {\n       \n    return (\n          <Ons.Page >\n            <Ons.Card>\n              <img src = {require(\"../images/photo-feet.jpg\")} style = {{maxWidth:\"100%\"}}/>\n              {this.instructions()}\n            </Ons.Card>\n          </Ons.Page>\n      );\n  }\n}\n\n// initializes the geolocated thing and sets Karta aas it's child\nexport default Meditation;\n","import React, { Component } from 'react';\nimport Fullscreen from \"react-full-screen\";\nimport { Link } from \"react-router-dom\";\n// imports for OnsenUI\nimport * as Ons from 'react-onsenui'; // Import everything and use it as 'Ons.Page', 'Ons.Button'\nimport * as ons from 'onsenui'; // This needs to be imported to bootstrap the components.\n// Webpack CSS import\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\n\n\nclass Breathing extends Component {\n  \n  constructor(props){\n    super(props);\n    // this.state = {\n    // }\n  }\n  \n  componentDidMount(){\n    // när den skapats\n  }\n\n  handleClick(){\n    console.log(ons);\n    ons.notification.alert('Hello world!');\n  }\n\n\n  instructions(){\n    let instructions = [\"Become aware of your face.\", \"Feel the forehead.\", \"The eyebrows.\", \"Eyes.\", \"Nose.\", \"Nostrils.\", \"Air flowing through the nostrils.\", \n    \"Cheeks.\", \"Jaw.\", \"Lips.\", \"Tongue.\", \"Whole of the head.\", \"The space surrounding the head.\"   \n    ];        \n    \n    return (\n    <div> \n      <h1>Breathing Excercises</h1>\n      <ol>\n        {instructions.map((item, i) =>\n          <li key = {i + item}>{item}</li>\n         )}\n      </ol>\n    </div>\n    )\n  }\n\n  render() {\n       \n    return (\n          <Ons.Page>\n            <Ons.Card>\n              <img src = {require(\"../images/photo-shoulders-1.jpg\")} style = {{maxWidth:\"100%\"}}/>\n              {this.instructions()}\n            </Ons.Card>\n          </Ons.Page>\n      );\n  }\n}\n\n// initializes the geolocated thing and sets Karta aas it's child\nexport default Breathing;\n","import React, { Component } from 'react';\nimport Fullscreen from \"react-full-screen\";\nimport { Link } from \"react-router-dom\";\n\n// imports for OnsenUI\nimport * as Ons from 'react-onsenui'; // Import everything and use it as 'Ons.Page', 'Ons.Button'\nimport * as ons from 'onsenui'; // This needs to be imported to bootstrap the components.\n// Webpack CSS import\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\n\n\nclass About extends Component {\n  \n  constructor(props){\n    super(props);\n    // this.state = {\n    // }\n  }\n  \n  componentDidMount(){\n    // när den skapats\n  }\n\n  handleClick(){\n    console.log(ons);\n    ons.notification.alert('About!');\n  }\n\n  render() {\n       \n    return (\n        <Ons.Page>\n            <Ons.Card >\n              <h1>About</h1>\n              <p>This app is made for the course DM2518 at KTH. </p>\n              <h3><b>Authors</b></h3>\n              <p>Herman Högman Ording</p>\n              <p>Mikael Forsmark</p>\n            </Ons.Card>\n          </Ons.Page>\n      );\n  }\n}\n\n// initializes the geolocated thing and sets Karta aas it's child\nexport default About;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./Homescreen.css\";\n\n\nimport Yoga from \"../Yoga/Yoga\";\nimport Meditation from \"../Meditation/Meditation\";\nimport Breathing from \"../Breathing/Breathing\";\nimport About from \"../About/About\";\n\n\n// imports for OnsenUI\nimport * as Ons from 'react-onsenui'; // Import everything and use it as 'Ons.Page', 'Ons.Button'\nimport * as ons from 'onsenui'; // This needs to be imported to bootstrap the components.\n// Webpack CSS import\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\n\n\nclass Homescreen extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      index:0,\n    }\n  }\n    \n\n  render() {\n    let data = [\"Yoga\", \"Meditation\", \"Breathing\", \"About\"];\n\n\n    // Ons.Tabbar skapar tabbaren där nere\n    // det man matar in är vad som ska visas på varje tab genom \"content\".\n    // där lägger man helt enkelt in sitt element\n    // Ons.Tab är den ruta som man kan klicka på i tabbar där nere och \"label\" är vad som ska stå där.\n    // TODO: snygga till och byta icon\n    return (\n        <Ons.Page id=\"background\">  \n          <Ons.Tabbar\n            onPreChange={({index}) => this.setState({index:index})}\n            onPostChange={() => console.log('postChange')}\n            onReactive={() => console.log('postChange')}\n            position='bottom'\n            index={this.state.index}\n            renderTabs={(activeIndex, tabbar) => [\n              {\n                content: <Ons.Page key = \"About\"><About/></Ons.Page> ,\n                tab: <Ons.Tab label=\"About\" icon=\"fa-info-circle\" key = \"AboutTab\" />\n              },\n              {\n                content: <Ons.Page key = \"Yoga\"><Yoga/></Ons.Page>,\n                tab: <Ons.Tab label=\"Yoga\" icon=\"fa-child\" className = \"testTab\" key = \"YogaTab\"/>\n              },\n              {\n                content: <Ons.Page  key = \"Breathing\"><Breathing/></Ons.Page>,\n                tab: <Ons.Tab label=\"Breathing\" icon=\"fa-grin\" key = \"BreathingTab\" />\n              },\n              {\n                content: <Ons.Page  key = \"Meditation\"><Meditation/></Ons.Page>,\n                tab: <Ons.Tab label=\"Meditation\" icon=\"fa-heart\" key = \"MeditationTab\" />\n              }]\n            }\n          />\n        </Ons.Page>\n    );\n  }\n}\n\nexport default Homescreen;\n","import React, { Component } from 'react';\nimport { Route } from \"react-router-dom\";\n\nimport Yoga from \"./Yoga/Yoga\";\nimport Meditation from \"./Meditation/Meditation\";\nimport Breathing from \"./Breathing/Breathing\";\nimport About from \"./About/About\";\nimport Homescreen from \"./Homescreen/Homescreen\";\n// imports for OnsenUI\nimport * as Ons from 'react-onsenui'; // Import everything and use it as 'Ons.Page', 'Ons.Button'\nimport * as ons from 'onsenui'; // This needs to be imported to bootstrap the components.\n// Webpack CSS import\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Homescreen/>\n      </div>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(  \n\t<HashRouter>\n    \t<App />\n  \t</HashRouter>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}